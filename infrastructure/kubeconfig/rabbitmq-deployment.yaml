apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-prod.yaml convert -o kubeconfig/
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-prod.yaml convert -o kubeconfig/
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: password
            - name: RABBITMQ_DEFAULT_USER
              value: admin
            - name: RABBITMQ_MANAGEMENT_PORT
              value: "15672"
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: -rabbitmq_mqtt.tcp_listeners "[1883]" -rabbitmq_mqtt.ws_tcp_listeners "[15675]"
          image: rabbitmq:3-management
          name: rabbitmq-event-bucket
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
            - containerPort: 1883
              protocol: TCP
            - containerPort: 15675
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
            - mountPath: /var/log/rabbitmq
              name: rabbitmq-logs
      hostname: rabbitmq
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: rabbitmq-logs
          persistentVolumeClaim:
            claimName: rabbitmq-logs
